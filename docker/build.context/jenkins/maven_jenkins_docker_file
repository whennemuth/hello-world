FROM jenkins
MAINTAINER Warren

# Beef up the memory
ENV JAVA_OPTS="-Xmx8192m"

USER root

# Copy selected system settings files to JENKINS_HOME so they do not have to be set through jenkins admin console.
# Jenkins will transfer these files to JENKINS_HOME, but we cannot transfer them there directly with COPY because
# once a volume has been declared with the VOLUME instruction, you cannot copy anything there.
COPY config.xml /usr/share/jenkins/ref/
COPY credentials.xml /usr/share/jenkins/ref/
COPY hudson.tasks.Maven.xml /usr/share/jenkins/ref/
COPY org.jenkinsci.plugins.docker.commons.tools.DockerTool.xml /usr/share/jenkins/ref/
RUN mkdir -p /var/jenkins_home/jobs/backup-all-jobs
COPY config_backup_jobs.xml /var/jenkins_home/jobs/back-all-jobs/config.xml

# Copy the github private ssh key into the container
COPY github_id_jenkins_rsa /usr/share/jenkins/ref/
# Change permission level so that ssh agent does not complain about the ssh key being "too open".
RUN chgrp users /usr/share/jenkins/ref/github_id_jenkins_rsa
RUN chmod 600 /usr/share/jenkins/ref/github_id_jenkins_rsa
# Add github.com to the known_hosts for root so that attempts to make an ssh connection do not result in:
# "host key verification failed" 
ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

# Have the plugins.sh script (part of the jenkins image build context) load in jpi files for plugins from a text file listing. 
# Jenkins will install plugins not already when the container starts.
COPY plugins.txt /usr/share/jenkins/ref/
RUN /usr/local/bin/plugins.sh /usr/share/jenkins/ref/plugins.txt

# Have the jenkins logs written out to a mounted volume
# Include the mount target directory when starting the container with a "-v" arg.
RUN mkdir -p /var/log/jenkins
RUN chown -R  jenkins:jenkins /var/log/jenkins
VOLUME /var/log/jenkins
ENV JENKINS_OPTS="--logfile=/var/log/jenkins/jenkins.log"
# If not mounting a volume, you can still check the log from outside the container as follows:
# exec jenkins-master tail -f /var/log/jenkins/jenkins.log

# Build maven into the image.
ENV MAVEN_VERSION 3.3.9
RUN mkdir -p /usr/share/maven \
  && curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
    | tar -xzC /usr/share/maven --strip-components=1 \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
ENV MAVEN_HOME /usr/share/maven

# CMD ["mvn"]

USER jenkins

