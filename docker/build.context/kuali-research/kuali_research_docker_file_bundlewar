FROM tomcat:8-jre8
MAINTAINER Warren

# Beef up the memory to get the most it can for a t2.medium (4GB)
# NOTE: This can be alternatively set by including a setenv.sh file in the build context with these settings (uncomment the corresponding COPY statement below)
#       Also, you can override this setting by including it in an -e switch of the docker container run command.
ENV JAVA_OPTS="-Xmx3072m -Xms512m -XX:MaxPermSize=256m"
ENV TOMCAT_LOCATION="/usr/local/tomcat"
ENV TARGET_WAR="${TOMCAT_LOCATION}/webapps/kc.war"

ARG SOURCE_WAR

USER root

RUN \
   mkdir -p /usr/local/tomcat/webapp_mount && \
   mkdir -p /root/kuali/main/dev && \
   mkdir -p /root/kuali/main/config && \
   mkdir -p /root/kuali/main/logs/printing

# Copy the setenv.sh file into the the catalina bin directory to increase the java heap size.
# COPY setenv.sh /usr/local/tomcat/bin

# Copy the spring intrumentation jar file to the tomcat lib directory
COPY spring-instrument-tomcat-3.2.13.RELEASE.jar /usr/local/tomcat/lib

# Copy the mysql driver to the tomcat lib directory
COPY mysql-connector-java-5.1.38-bin.jar /usr/local/tomcat/lib

# Overwrite the context.xml in the catalina conf directory with one that includes a reference to the spring intrumentation jar
COPY context.xml /usr/local/tomcat/conf/context.xml

# Copy the kc-config.xml file to the user directory
# DISABLING: the xml file will be exposed by mounting a directory on the host that contains it.
#COPY kc-config.xml /root/kuali/main/dev
#COPY kc-config.xml /root/kuali/main/config

# 8080 is already exposed in parent image. Expose port 80 as well.
EXPOSE 80

# Allow write access for jenkins to save war files
RUN chmod a+w -R $TOMCAT_LOCATION/webapps

# Copy in the kc war file into the image from its jenkins build location
# (NOTE: 169.254.169.254 is a standard AWS ip for EC2 instance metadata)
RUN \
   # JENKINS_HOST=curl 169.254.169.254/latest/meta-data/public-hostname && \
   # SOURCE_WAR="${JENKINS_HOST}:${JENKINS_PORT}/${JENKINS_ROOT}/job/kc-dind/ws/coeus-webapp/target/[a-z].war" && \
   curl -sSL $SOURCE_WAR > $TARGET_WAR

CMD ["/usr/local/tomcat/bin/catalina.sh", "run"]